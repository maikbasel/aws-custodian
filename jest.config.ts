import type { Config } from 'jest';
import nextJest from 'next/jest.js';

const createJestConfig = nextJest({
  // Provide the path to your Next.js app to load next.config.js and .env files in your test environment
  dir: './',
});

// Add any custom config to be passed to Jest
const config: Config = {
  collectCoverage: true,
  coverageProvider: 'v8',
  // coverageThreshold: {
  //   global: {
  //     branches: 80,
  //     functions: 90,
  //     lines: 90,
  //     statements: 90,
  //   },
  // },
  collectCoverageFrom: [
    'src/**/*.{ts,tsx}',
    '!**/node_modules/**',
    '!src/sections/dashboard/components/header/theme-provider.tsx', // just a wrapper for NextThemesProvider
    '!src/app/layout.tsx',
  ],
  coveragePathIgnorePatterns: [
    '<rootDir>/src/components/ui/', // generated by or copied from shadcn/ui
  ],
  testEnvironment: 'jsdom',
  moduleNameMapper: {
    '^@/(.*)$': '<rootDir>/src/$1',
  },
  setupFilesAfterEnv: ['<rootDir>/jest.setup.ts'],
  reporters: ['default', 'jest-junit'],
};

// createJestConfig is exported this way to ensure that next/jest can load the Next.js config which is async
export default createJestConfig(config);
